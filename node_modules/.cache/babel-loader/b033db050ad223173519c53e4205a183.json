{"ast":null,"code":"var _jsxFileName = \"/Volumes/mac f/acefolio/src/components/layout/Blog.js\";\nimport React, { Component } from 'react';\nexport class Blog extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      id: \"bg-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container-fluid hero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"blog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dark-overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h2-blog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"A Guide to Becoming a Full-Stack Developer\"))), React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Full-Stack Web Development, is the most popular developer occupation today.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), \"In this article I will be providing a defnitive guide to what I believe are the most important skills required to become a Full-Stack Web Developer today and land a job if you\\u2019ve never coded before.\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      class: \"display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"The Definitive Guide\"), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"A Full-Stack Web Developer is someone who is able to work on both the front-end and back-end portions of an application.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), \" Front-end generally refers to the portion of an application the user will see or interact with, and the back-end is the part of the application that handles the logic, database interactions, user authentication, server con\\0guration, etc.Being a Full-Stack Developer doesn\\u2019t mean that you have necessarily mastered everything required to work with the front-end or back-end, but it means that you are able to work on both sides and understand what is going on when building an application.\"), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"If you want to become a Full-Stack Web Developer and land your frst job, below is a reference guide with a list of things you should learn.\")), React.createElement(\"div\", {\n      className: \"parallax-blog-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h2-parallax\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"1. HTML/CSS\")), React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Almost every single program, whether online or in-person, that is teaching you how to be a web developer will start with HTML and CSS because they are the building blocks of the web. Simply put, HTML allows you to add content to a website and CSS is what allows you to style your content. \", React.createElement(\"be\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), \"The following topics related to HTML/CSS come up often in interviews and on the actual job when you\\u2019re working:\")), React.createElement(\"ul\", {\n      className: \"list-group lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item list-group-item-action list-group-item-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Semantic HTML.\"), React.createElement(\"li\", {\n      className: \"list-group-item list-group-item-action list-group-item-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Be able to explain the CSS Box Model.\"), React.createElement(\"li\", {\n      className: \"list-group-item list-group-item-action list-group-item-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Benefts of CSS preprocessors (you don\\u2019t necessarily need to understand how to use one on a deep level, but you should to understand what they are for and how they help with development).\"), React.createElement(\"li\", {\n      className: \"list-group-item list-group-item-action list-group-item-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"CSS Media Queries to target diferent devices and write responsive CSS.\"), React.createElement(\"li\", {\n      className: \"list-group-item list-group-item-action list-group-item-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Bootstrap (a framework for helping design and layout content on a page and while many online programs or schools focus heavily on teaching Bootstrap, in reality it\\u2019s more important to have a deep knowledge of fundamental CSS than specifc Bootstrap features and methods).\")), React.createElement(\"div\", {\n      className: \"parallax-blog-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h2-parallax\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"2. JavaScript\")), React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"The JavaScript language is growing more popular every year and new libraries, frameworks, and tools are constantly being released.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), \"Based on the Stack Overflow Developer Survey, JavaScript is the most popular language in both Full-Stack, Front-end, and Back-end Development. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), \"It\\u2019s the only language that runs natively in the browser, and can double up as a server-side language as well (as you\\u2019ll see below with Node.js). \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), \"Below are some topics you need to understand as a Full- Stack Developer:\")), React.createElement(\"ul\", {\n      className: \"list-group lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \" Understand how to work with the DOM. Also know what JSON is and how to manipulate it.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Important language features such as functional composition, prototypal inheritance, closures, event delegation, scope, higher- order functions.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Asynchronous control flow, promises, and callbacks.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Learn how to properly structure your code and modularize parts of it, things like webpack, browserify, or build tools like gulp will defnitely be helpful to know.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Know how to use at least one popular framework (many programs will focus heavily on teaching you a library or framework like React or AngularJS, but in reality it\\u2019s much more important to have a deep understanding of the JavaScript language and not focus so much on framework-specific features. Once you have a good understanding of JavaScript, picking up a framework that sits on top of it won\\u2019t be too hard anyway).\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Although some may argue that you should be using this less or that it\\u2019s slowly dying, jQuery code still exists in most applications and a solid understanding of it will be helpful.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Some knowledge on testing frameworks and why they\\u2019re important (some may even claim that this topic should be optional).\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Learn about some important new ES6 features (optional).\")), React.createElement(\"div\", {\n      className: \"parallax-blog-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h2-parallax\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"3. Back-End Language\")), React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Once you feel you\\u2019ve gotten a good grasp on HTML/CSS and JavaScript, you\\u2019ll want to move on to a back-end language that will handle things like database operations, user authentication, and application logic. All online programs and bootcamps usually focus on a specifc back-end language, and in reality in doesn\\u2019t matter which one you learn so much as long as you understand what is going on and you learn the nuances of your chosen language. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), \"You\\u2019ll get a ton of di\\0erent responses if you ask someone which back-end language is the best to learn, so below I\\u2019ve listed a few popular combinations.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), \" An important note: whichever you decide to learn, just stick with it and learn as much as you can about it\\u2014there are jobs out there for all the languages listed below.\")), React.createElement(\"ul\", {\n      className: \"list-group lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Node.js: This is a great option because Node.js is itself just a JavaScript environment which means you don\\u2019t need to learn a new language. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), \"This is a big reason why a lot of online programs and bootcamps choose to teach Node.js. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), \"The most popular framework you\\u2019d most likely learn to aid you in developing web applications is Express.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Ruby: Some popular frameworks for developing in Ruby are Rails and Sinatra. Plenty of programs teach Ruby as a frst back-end language.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Python: Some popular frameworks for developing in Python are Django and Flask.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Java: The Java language isn\\u2019t taught so much these days when it comes to Full-Stack Web Development, but some companies do use Java as their back-end and it is still a very in-demand language (see image above).\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"PHP: PHP is rarely taught in programs these days, but just like with Java, it is still very in-demand and it is a cornerstone of the web today.\")), React.createElement(\"div\", {\n      className: \"parallax-blog-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h2-parallax\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"4. Databases & Web Storage\")), React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"When learning to build web applications, at some point you\\u2019ll probably want to store data somewhere and then access it later. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \"You should have a good grasp on the following topics related to databases and storage.\")), React.createElement(\"ul\", {\n      className: \"list-group lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Understand the bene\\0ts of relational data, e.g. SQL.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Learn about NoSQL databases, e.g. MongoDB.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Understand which would be better in certain situations.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Know how to connect a database with your chosen back-end language (e.g. Node.js + MongoDB).\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Understand the benefits of in-memory data stores like Redis or memcached.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Web storage to store sessions, cookies, and cached data in the browser.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Scaling databases, ACID, and ORM (all optional).\")), React.createElement(\"div\", {\n      className: \"parallax-blog-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h2-parallax\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"5. HTTP & REST\")), React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"HTTP is a stateless application protocol on the Internet\\u2014it\\u2019s what allows clients to communicate with servers (e.g. your JavaScript code can make an AJAX request to some back-end code you have running on a server which will happen via HTTP). \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), \"Some important topics you should learn about are listed below:\")), React.createElement(\"ul\", {\n      className: \"list-group lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"What is REST and why is it important in regards to the HTTP protocol and web applications.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Best practices for designing a RESTful API. POST/GET requests.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Learning how to use Chrome DevTools can be extremely helpful.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"What are SSL Certi\\0cates.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"HTTP/2 & SPDY (optional).\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"WebSockets, Web Workers, and Service Workers (all optional).\")), React.createElement(\"div\", {\n      className: \"parallax-blog-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h2-parallax\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"6. Web Application Architecture\")), React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Once you think you have a grasp on HTML/CSS, JavaScript, back-end programming, databases, and HTTP/REST, then comes the tricky part. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \"At this point if you want to create a somewhat complex web application, you\\u2019ll need to know how to structure your code, how to separate your files, where to host your large media files, how to structure the data in your database, where to perform certain computational tasks (client-side vs server-side), and much more There are best practices that you can read about online on, but the best way to actually learn about application architecture is by working on a large application yourself that contains several moving parts\\u2014or even better, working on a team and together developing a somewhat large/complex application.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \"This is why, for example, someone with 7+ years of experience may not necessarily know CSS or JavaScript better than someone with 2 years of experience, but over all of those years they\\u2019ve presumably worked with all sorts of difierent applications and websites and have learned how to architect and design applications (among learning other important things) to be most eficient and can see the \\u201Cbig picture\\u201D when it comes to development. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \"Below are some things you can read that will help you learn how to architect your web applications eficiently:\")), React.createElement(\"ul\", {\n      className: \"list-group lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Learn about common platforms as a service, e.g. Heroku and AWS. Heroku allows you to easily upload your code and have an application up and running with very little configuration or server maintenance and AWS offers dozens of products and services to help with storage, video processing, load balancing, and much more.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Performance optimization for applications and modern browsers.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Some opinions on what a web application architecture should include.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" Designing Web Applications by Microsoft.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"MVC.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Most importantly though you should try to work on projects with people, look at codebases of popular projects on GitHub, and learn as much as you can from senior developers.\")), React.createElement(\"div\", {\n      className: \"parallax-blog-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h2-parallax\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"7. Git\")), React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Git is a version control system that allows developers working on a team to keep track of all the changes being made to a codebase. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), \"It\\u2019s important to know a few important things related to Git so that you understand how to properly get the latest code that you\\u2019ve missed, update parts of the code, make fixes, and change other people\\u2019s code without breaking things. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), \"You should de\\0nitely learn the concept behind Git and play around with it yourself.\")), React.createElement(\"div\", {\n      className: \"parallax-blog-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h2-parallax\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"8. Basic Algorithms & Data Structures\")), React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"This topic is somewhat polarizing in the development world because there are developers who don\\u2019t think there should be such a heavy focus on computer science topics like tree traversal, sorting, algorithm analysis, matrix manipulation, etc. in web development. However, there are companies like Google that are notorious for asking these types of questions in their interviews. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), \"As someone said about the Front- End engineering interview at Google: That said, as Ryan McGrath mentions, our front-end (FE) engineers are expected to have a solid CS background, like all our engineers. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), \"While there are companies that practically require applicants to have a computer science degree or equivalent, there are plenty of companies that will hire people without this technical qualifcation if they can prove that they know how to develop applications and show an understanding of the whole domain. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), \"But part of being a competent developer and not writing ineficient code or using the wrong tools is an understanding of some basic algorithms and data structures and being able to analyze trade-offs. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), \"So here are some things you should definitely learn:\")), React.createElement(\"ul\", {\n      className: \"list-group lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Improving your Algorithms & Data Structure Skills.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Study hash tables and try to understand them on a deeper level. This data structure underlies objects in JavaScript (dictionaries in Python and hashes in Ruby).\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Understand how trees and graphs can be bene\\0cial as data structures.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Understand the basics of Big-O analysis so you don\\u2019t do silly things like create a nested loop 3 levels down if you don\\u2019t need to!\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Know when to use an object vs an array and understand the trade-offs.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Learn why caching is so important when working with a large amount of data. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), \"Also learn the pros and cons of in-memory vs disk storage.\"), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Learn the difference between queues and stacks.\"))));\n  }\n\n}\nexport default Blog;","map":{"version":3,"sources":["/Volumes/mac f/acefolio/src/components/layout/Blog.js"],"names":["React","Component","Blog","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport class Blog extends Component {\n  render() {\n    return (\n      <div id=\"bg-img\">\n        <div class=\"container-fluid hero\">\n          <div className=\"blog\">\n            <div className=\"dark-overlay\">\n              <h2 className=\"h2-blog\">A Guide to Becoming a Full-Stack Developer</h2>\n\n            </div>\n          </div>\n          <div className=\"jumbotron\">\n              <p>Full-Stack Web Development, is the most popular developer occupation today.<br />\n                In this article I will be providing a defnitive guide to what I believe are the most important skills required to become a Full-Stack Web Developer today and land a job if you’ve never coded before.\n          </p><hr />\n              <h1 class=\"display-4\">The Definitive Guide</h1>\n              <p className=\"lead\">A Full-Stack Web Developer is someone who is able to work on both the front-end and back-end portions of an application.<br /> Front-end generally refers to the portion of an application the user will see or interact with, and the back-end is the part of the application that handles the logic, database interactions, user authentication, server con\u0000guration, etc.Being a Full-Stack Developer doesn’t mean that you have necessarily mastered everything required to work with the front-end or back-end, but it means that you are able to work on both sides and understand what is going on when building an application.</p>\n              <p className=\"lead\">If you want to become a Full-Stack Web Developer and land your frst job, below is a reference guide with a list of things you should learn.</p>\n            </div>\n          <div className=\"parallax-blog-1\">\n            <h2 className=\"h2-parallax\">1. HTML/CSS</h2>\n          </div><div className=\"jumbotron\">\n          <p className=\"lead\">Almost every single program, whether online or in-person, that is teaching you how to be a web developer will start with HTML and CSS because they are the building blocks of the web. Simply put, HTML allows you to add content to a website and CSS is what allows you to style your content. <be />The following topics related to HTML/CSS come up often in interviews and on the actual job when you’re working:</p>\n          </div>\n          <ul className=\"list-group lead\">\n            <li className=\"list-group-item list-group-item-action list-group-item-info\">Semantic HTML.</li>\n            <li className=\"list-group-item list-group-item-action list-group-item-info\">Be able to explain the CSS Box Model.</li>\n            <li className=\"list-group-item list-group-item-action list-group-item-info\">Benefts of CSS preprocessors (you don’t necessarily need to understand how to use one on a deep level, but you should to understand what they are for and how they help with development).</li>\n            <li className=\"list-group-item list-group-item-action list-group-item-info\">CSS Media Queries to target diferent devices and write responsive CSS.</li>\n            <li className=\"list-group-item list-group-item-action list-group-item-info\">Bootstrap (a framework for helping design and layout content on a page and while many online programs or schools focus heavily on teaching Bootstrap, in reality it’s more important to have a deep knowledge of fundamental CSS than specifc Bootstrap features and methods).</li>\n          </ul>\n          <div className=\"parallax-blog-2\">\n            <h2 className=\"h2-parallax\">2. JavaScript</h2>\n          </div><div className=\"jumbotron\">\n          <p className=\"lead\">The JavaScript language is growing more popular every year and new libraries, frameworks, and tools are constantly being released.<br />Based on the Stack Overflow Developer Survey, JavaScript is the most popular language in both Full-Stack, Front-end, and Back-end Development. <br />It’s the only language that runs natively in the browser, and can double up as a server-side language as well (as you’ll see below with Node.js). <br />Below are some topics you need to understand as a Full- Stack Developer:</p>\n          </div>\n          <ul className=\"list-group lead\">\n            <li className=\"list-group-item\"> Understand how to work with the DOM. Also know what JSON is and how to manipulate it.</li>\n            <li className=\"list-group-item\">Important language features such as functional composition, prototypal inheritance, closures, event delegation, scope, higher- order functions.</li>\n            <li className=\"list-group-item\">Asynchronous control flow, promises, and callbacks.</li>\n            <li className=\"list-group-item\">Learn how to properly structure your code and modularize parts of it, things like webpack, browserify, or build tools like gulp will defnitely be helpful to know.</li>\n            <li className=\"list-group-item\">Know how to use at least one popular framework (many programs will focus heavily on teaching you a library or framework like React or AngularJS, but in reality it’s much more important to have a deep understanding of the JavaScript language and not focus so much on framework-specific features. Once you have a good understanding of JavaScript, picking up a framework that sits on top of it won’t be too hard anyway).</li>\n            <li className=\"list-group-item\">Although some may argue that you should be using this less or that it’s slowly dying, jQuery code still exists in most applications and a solid understanding of it will be helpful.</li>\n            <li className=\"list-group-item\">Some knowledge on testing frameworks and why they’re important (some may even claim that this topic should be optional).</li>\n            <li className=\"list-group-item\">Learn about some important new ES6 features (optional).</li>\n          </ul>\n          <div className=\"parallax-blog-3\">\n            <h2 className=\"h2-parallax\">3. Back-End Language</h2>\n          </div><div className=\"jumbotron\">\n          <p className=\"lead\">Once you feel you’ve gotten a good grasp on HTML/CSS and JavaScript, you’ll want to move on to a back-end language that will handle things like database operations, user authentication, and application logic. All online programs and bootcamps usually focus on a specifc back-end language, and in reality in doesn’t matter which one you learn so much as long as you understand what is going on and you learn the nuances of your chosen language. <br />You’ll get a ton of di\u0000erent responses if you ask someone which back-end language is the best to learn, so below I’ve listed a few popular combinations.<br /> An important note: whichever you decide to learn, just stick with it and learn as much as you can about it—there are jobs out there for all the languages listed below.</p>\n          </div>\n          <ul className=\"list-group lead\">\n            <li className=\"list-group-item\">Node.js: This is a great option because Node.js is itself just a JavaScript environment which means you don’t need to learn a new language. <br />This is a big reason why a lot of online programs and bootcamps choose to teach Node.js. <br />The most popular framework you’d most likely learn to aid you in developing web applications is Express.</li>\n            <li className=\"list-group-item\">Ruby: Some popular frameworks for developing in Ruby are Rails and Sinatra. Plenty of programs teach Ruby as a frst back-end language.</li>\n            <li className=\"list-group-item\">Python: Some popular frameworks for developing in Python are Django and Flask.</li>\n            <li className=\"list-group-item\">Java: The Java language isn’t taught so much these days when it comes to Full-Stack Web Development, but some companies do use Java as their back-end and it is still a very in-demand language (see image above).</li>\n            <li className=\"list-group-item\">PHP: PHP is rarely taught in programs these days, but just like with Java, it is still very in-demand and it is a cornerstone of the web today.</li>\n          </ul>\n          <div className=\"parallax-blog-4\">\n            <h2 className=\"h2-parallax\">4. Databases & Web Storage</h2>\n          </div><div className=\"jumbotron\">\n          <p className=\"lead\">When learning to build web applications, at some point you’ll probably want to store data somewhere and then access it later. <br />You should have a good grasp on the following topics related to databases and storage.</p>\n          </div>\n          <ul className=\"list-group lead\">\n            <li className=\"list-group-item\">Understand the bene\u0000ts of relational data, e.g. SQL.</li>\n            <li className=\"list-group-item\">Learn about NoSQL databases, e.g. MongoDB.</li>\n            <li className=\"list-group-item\">Understand which would be better in certain situations.</li>\n            <li className=\"list-group-item\">Know how to connect a database with your chosen back-end language (e.g. Node.js + MongoDB).</li>\n            <li className=\"list-group-item\">Understand the benefits of in-memory data stores like Redis or memcached.</li>\n            <li className=\"list-group-item\">Web storage to store sessions, cookies, and cached data in the browser.</li>\n            <li className=\"list-group-item\">Scaling databases, ACID, and ORM (all optional).</li>\n          </ul>\n          <div className=\"parallax-blog-5\">\n            <h2 className=\"h2-parallax\">5. HTTP & REST</h2>\n          </div><div className=\"jumbotron\">\n          <p className=\"lead\">HTTP is a stateless application protocol on the Internet—it’s what allows clients to communicate with servers (e.g. your JavaScript code can make an AJAX request to some back-end code you have running on a server which will happen via HTTP). <br />Some important topics you should learn about are listed below:</p>\n          </div>\n          <ul className=\"list-group lead\">\n            <li className=\"list-group-item\">What is REST and why is it important in regards to the HTTP protocol and web applications.</li>\n            <li className=\"list-group-item\">Best practices for designing a RESTful API. POST/GET requests.</li>\n            <li className=\"list-group-item\">Learning how to use Chrome DevTools can be extremely helpful.</li>\n            <li className=\"list-group-item\">What are SSL Certi\u0000cates.</li>\n            <li className=\"list-group-item\">HTTP/2 & SPDY (optional).</li>\n            <li className=\"list-group-item\">WebSockets, Web Workers, and Service Workers (all optional).</li>\n          </ul>\n          <div className=\"parallax-blog-6\">\n            <h2 className=\"h2-parallax\">6. Web Application Architecture</h2>\n          </div><div className=\"jumbotron\">\n          <p className=\"lead\">Once you think you have a grasp on HTML/CSS, JavaScript, back-end programming, databases, and HTTP/REST, then comes the tricky part. <br />At this point if you want to create a somewhat complex web application, you’ll need to know how to structure your code, how to separate your files, where to host your large media files, how to structure the data in your database, where to perform certain computational tasks (client-side vs server-side), and much more There are best practices that you can read about online on, but the best way to actually learn about application architecture is by working on a large application yourself that contains several moving parts—or even better, working on a team and together developing a somewhat large/complex application.<br />This is why, for example, someone with 7+ years of experience may not necessarily know CSS or JavaScript better than someone with 2 years of experience, but over all of those years they’ve presumably worked with all sorts of difierent applications and websites and have learned how to architect and design applications (among learning other important things) to be most eficient and can see the “big picture” when it comes to development. <br />Below are some things you can read that will help you learn how to architect your web applications eficiently:</p>\n          </div>\n          <ul className=\"list-group lead\">\n            <li className=\"list-group-item\">Learn about common platforms as a service, e.g. Heroku and AWS. Heroku allows you to easily upload your code and have an application up and running with very little configuration or server maintenance and AWS offers dozens of products and services to help with storage, video processing, load balancing, and much more.</li>\n            <li className=\"list-group-item\">Performance optimization for applications and modern browsers.</li>\n            <li className=\"list-group-item\">Some opinions on what a web application architecture should include.</li>\n            <li className=\"list-group-item\"> Designing Web Applications by Microsoft.</li>\n            <li className=\"list-group-item\">MVC.</li>\n            <li className=\"list-group-item\">Most importantly though you should try to work on projects with people, look at codebases of popular projects on GitHub, and learn as much as you can from senior developers.</li>\n          </ul>\n          <div className=\"parallax-blog-7\">\n            <h2 className=\"h2-parallax\">7. Git</h2>\n          </div><div className=\"jumbotron\">\n          <p className=\"lead\">Git is a version control system that allows developers working on a team to keep track of all the changes being made to a codebase. <br />It’s important to know a few important things related to Git so that you understand how to properly get the latest code that you’ve missed, update parts of the code, make fixes, and change other people’s code without breaking things. <br />You should de\u0000nitely learn the concept behind Git and play around with it yourself.</p>\n          </div>\n          <div className=\"parallax-blog-8\">\n            <h2 className=\"h2-parallax\">8. Basic Algorithms & Data Structures</h2>\n          </div><div className=\"jumbotron\">\n          <p className=\"lead\">This topic is somewhat polarizing in the development world because there are developers who don’t think there should be such a heavy focus on computer science topics like tree traversal, sorting, algorithm analysis, matrix manipulation, etc. in web development. However, there are companies like Google that are notorious for asking these types of questions in their interviews. <br />As someone said about the Front- End engineering interview at Google: That said, as Ryan McGrath mentions, our front-end (FE) engineers are expected to have a solid CS background, like all our engineers. <br />While there are companies that practically require applicants to have a computer science degree or equivalent, there are plenty of companies that will hire people without this technical qualifcation if they can prove that they know how to develop applications and show an understanding of the whole domain. <br />But part of being a competent developer and not writing ineficient code or using the wrong tools is an understanding of some basic algorithms and data structures and being able to analyze trade-offs. <br />So here are some things you should definitely learn:</p>\n          </div>\n          <ul className=\"list-group lead\"  >\n            <li className=\"list-group-item\">Improving your Algorithms & Data Structure Skills.</li>\n            <li className=\"list-group-item\">Study hash tables and try to understand them on a deeper level. This data structure underlies objects in JavaScript (dictionaries in Python and hashes in Ruby).</li>\n            <li className=\"list-group-item\">Understand how trees and graphs can be bene\u0000cial as data structures.</li>\n            <li className=\"list-group-item\">Understand the basics of Big-O analysis so you don’t do silly things like create a nested loop 3 levels down if you don’t need to!</li>\n            <li className=\"list-group-item\">Know when to use an object vs an array and understand the trade-offs.</li>\n            <li className=\"list-group-item\">Learn why caching is so important when working with a large amount of data. <br />Also learn the pros and cons of in-memory vs disk storage.</li>\n            <li className=\"list-group-item\">Learn the difference between queues and stacks.</li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}